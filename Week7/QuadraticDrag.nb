(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    113335,       2363]
NotebookOptionsPosition[    111158,       2293]
NotebookOutlinePosition[    111514,       2309]
CellTagsIndexPosition[    111471,       2306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", "9.8"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"grav", ".", " ", "constant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "=", "0.5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"length", " ", "of", " ", "pendulum"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]0", "=", 
    RowBox[{"20", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"20", " ", "degrees"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]0", " ", "=", " ", "0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"starting", " ", "from", " ", "rest"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "y"}], ";", "\[IndentingNewLine]", 
    RowBox[{"t", "=", "x"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ode1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"g", "/", "l"}], ")"}]}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
      "\[Omega]0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"ode1", ",", "\[Theta]", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4941618998598137`*^9, 3.4941619588657084`*^9}, 
   3.49416200170741*^9, {3.494162159839367*^9, 3.494162264850087*^9}, {
   3.4941622953964167`*^9, 3.494162314363269*^9}, {3.494162429878344*^9, 
   3.494162429931975*^9}, {3.494162689372713*^9, 3.494162709813946*^9}, {
   3.4941627527093143`*^9, 3.494162752876684*^9}, {3.494162969971979*^9, 
   3.494162984039895*^9}, {3.494163074268774*^9, 3.494163197175642*^9}, {
   3.4941632664519243`*^9, 3.494163266509802*^9}, {3.494163302388669*^9, 
   3.494163302618104*^9}, {3.494167125909374*^9, 3.494167127043168*^9}, {
   3.494178629013938*^9, 3.4941786941328583`*^9}, {3.494178743416378*^9, 
   3.494178753982154*^9}, {3.494178806776251*^9, 3.49417889255365*^9}, {
   3.577548930912209*^9, 3.577549058993216*^9}, {3.57772419053379*^9, 
   3.577724228100313*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsfun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(5\\\\ \[Pi]\\)\\/18\\)\[NoBreak] cannot \
be used as a function. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsfun\\\", ButtonNote -> \
\\\"NDSolve::dsfun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784523385470257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myplot1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"180", "/", "Pi"}], ")"}], " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omega", "=", 
   SqrtBox[
    RowBox[{"(", 
     RowBox[{"g", "/", "l"}], ")"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.494162004524008*^9, 3.494162076852659*^9}, {
   3.494162433062894*^9, 3.494162433108081*^9}, {3.494162592059354*^9, 
   3.4941625983662167`*^9}, {3.494162757151064*^9, 3.494162787005321*^9}, {
   3.4941628547936563`*^9, 3.494162856894761*^9}, {3.494162887335985*^9, 
   3.494162892983869*^9}, {3.494162976794415*^9, 3.494163001498172*^9}, {
   3.494163071893292*^9, 3.4941630719595547`*^9}, {3.494163240196003*^9, 
   3.494163243631948*^9}, {3.494178674109873*^9, 3.494178699548072*^9}, {
   3.577549065982582*^9, 3.577549072700952*^9}, 3.577549145166576*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338693239*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.0004085714285714286`]\\)\\) \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \\(\\(Sin[\\(\\(\\(\\(\\(5\\\\ \
\[Pi]\\)\\/18\\)\\)[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\(5\\\\ \[Pi]\\)\\/18\\)\\)[0]\\)\\) \[Equal] \[Pi]\\/9\\)\
\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] 0\\)\\)}\
\\)\\), \\(5\\\\ \[Pi]\\)\\/18, \\(\\({0.0004085714285714286`, 0, \
20}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338695022*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338756472*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0 \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338757601*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338758891*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338804552*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0.` \
\[Equal] \\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338805747*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452338806978*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"180", "/", "Pi"}], ")"}], " ", "\[Theta]0", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myplot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"approx", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.4941620805077047`*^9, 3.494162130559312*^9}, {
  3.494162438686253*^9, 3.4941624388214483`*^9}, {3.49416276111087*^9, 
  3.4941627612842607`*^9}, {3.494163076540534*^9, 3.494163076603696*^9}, {
  3.4941632000470552`*^9, 3.494163201262197*^9}, {3.494163247872136*^9, 
  3.494163268710841*^9}, {3.494163305169607*^9, 3.494163305408745*^9}, {
  3.4941671378365726`*^9, 3.494167137896326*^9}, {3.494178681693411*^9, 
  3.494178704379784*^9}, {3.577549081756276*^9, 3.5775491266935997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{"myplot1", ",", "myplot2"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.494162134647728*^9, 3.4941621507573*^9}, {
  3.4941622413147984`*^9, 3.494162255928239*^9}, {3.494162609064744*^9, 
  3.494162610408478*^9}, {3.494163058283469*^9, 3.494163060738275*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
jaJtD+Z6V/JBOZ36bIV5I8tlvVLKUz68yc8fKR6l0TN/Xuizaqyfxan5Vpg3
uiP/6/pdy4eINd9nTGLeEE/+aL2gng9TecUpLydoxLp2v2B9I9a/HNlaNoL3
v584P6KJD69nHBp58x3v/8zz6J0WPsycON8s3Yb3f2fy/eMHPti3fefswjx0
o1fVTrod+0vpE4ehIhpV/x0qWfKZD5k+ObHZ6TTqlarT9frKh2Ob0q6diqCR
hPr14+d6+cA4J2VT4EIjjjB8qOo7Hxpj3rUrLqORBWxyHB7gwxLNWYElCjTy
WktV6gzxIV/V+9Odbgpl7/18KvwPH97ufTSVeRTzxpFHf3Mn+IAY37seYN7o
TT6z/YOIACTSlMaNFSjELTKnF88UAGs282braRJZPddK9ZAQgMLbFYMzbUm0
q+XP9LPSAvhsNVnSPJNEOeM5Db/mCEDw/azPld0EeiEdtVh7rgAWHV6ysFiV
QH3qWy/bqghg59sgL494IeIZy/nf0hRAvvePinlMAbp1NEBuJ18Au/JOGiQo
clHfUqeIo4QABs9f0Xq7ioN4Q6a/rtACiEpn+RsGsFG2q8KbNkMBREOU2EAZ
E2UZ3Tu3eaUAenPaX6YxddHVsQGNNVsFkObAGXp/eh76fKc5cZerAH40+DwU
P6qEdDzQtDh3ASjfPs0W81NAl9+e6HzqLYD3Hi/7fi2TRen3BNeNgwRg1Ecz
G1smH6fs3iXQO4nPY2TcLzpDFFp0N6SvP43PP6c3vtdqJii3LpH1PyuAocLz
Fw+ekIRzFpKDuRcE0L7vQb/edHlIZmYXsLIFkDRcI1FvqQKNH08yVt3C5z3z
2LN/nRoonDlw1v2OAEQTZr54ukEdksRWH7hcKIAlbwoPndbRgsT2r0vVKgRQ
yLcjlv/QhVfnXt5aXCUAJbeuz+ebFsBs2/vqm54LYJ1a0vHPJQxIKI0SOfNS
ACM+t0rSDrLgeOqCytmtArA//+26JuawF+uk9QSfBJCSVtS+P4IHkhLDmVYd
AjieH2YWasyH2KDKYzHdAmjQkLacc1sAx+y2W4oOC6D/wKsPmy4TcNmm1dF9
VACw6G5azi8CSlbb+Tz9K4CxfOlH5sYkNK2oC2NPCeA/jQfL58dhXlm26mTc
dCFwvUKGletJkDJAl7//J4S4lRnHhXMoYFKG+Taz8HiTdazNWgocGdymObJC
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
Etu3hPmSLUtC6S/G2L/3gk9kRWpNlhDwPzSWw0Q=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.4941670604568167`*^9, 3.494167141595954*^9, 3.4941789048121853`*^9, 
   3.5775491591298018`*^9, {3.5777242066098824`*^9, 3.577724234709546*^9}, 
   3.577724997890851*^9, 3.577725838951733*^9, 3.57772592376888*^9, 
   3.5777265446467*^9, 3.578104640011054*^9, 3.578186958374365*^9, 
   3.578452338884116*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", "9.8"}], ";", " ", 
    RowBox[{"l", "=", "0.5"}], ";", " ", 
    RowBox[{"omega", "=", 
     SqrtBox[
      RowBox[{"(", 
       RowBox[{"g", "/", "l"}], ")"}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"g", "/", "l"}], ")"}]}], "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
             "\[Omega]0"}]}], "}"}], ",", "\[Theta]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "0", ",", "20"}], "}"}]}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"180", "/", "Pi"}], ")"}], " ", "\[Theta]0", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"omega", "*", "t"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"180", "/", "Pi"}], ")"}], "*", " ", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], "/.", "result"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Blue", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t (s)\>\"", ",", "\"\<\[Theta] (rad)\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "300"}], "}"}]}]}], "]"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "0.5", ",", "\"\<length (m)\>\""}], "}"}], ",", "0", 
     ",", "2", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]0", ",", 
       RowBox[{"20", "*", 
        RowBox[{"Pi", "/", "180"}]}], ",", "\"\<initial angle (rad)\>\""}], 
      "}"}], ",", ".1", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]0", ",", "0", ",", "\"\<initial speed (rad/s)\>\""}], 
      "}"}], ",", "0", ",", "10.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.577478475599698*^9, 3.5774784997979183`*^9}, {
   3.577478534848688*^9, 3.577478567062739*^9}, 3.577490072664493*^9, {
   3.577502720630567*^9, 3.5775027514202127`*^9}, 3.5775030057285748`*^9, 
   3.577503078429886*^9, {3.577503108611413*^9, 3.577503166858922*^9}, {
   3.577549179281249*^9, 3.577549221102922*^9}, {3.577549268358193*^9, 
   3.577549405114224*^9}, {3.577549553049855*^9, 3.577549582375984*^9}, 
   3.577549627541086*^9, {3.57754973813801*^9, 3.577549829233026*^9}, {
   3.57754987411872*^9, 3.5775499131013613`*^9}, {3.577549955916011*^9, 
   3.5775499892251*^9}, {3.577550221132785*^9, 3.5775502214075537`*^9}, {
   3.577550744443714*^9, 3.5775508053235483`*^9}, {3.577724251398286*^9, 
   3.577724258308791*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
    Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 0.5, "length (m)"}, 0, 2}, {{
       Hold[$CellContext`\[Theta]0$$], Rational[1, 9] Pi, 
       "initial angle (rad)"}, 0.1, Rational[1, 2] Pi}, {{
       Hold[$CellContext`\[Omega]0$$], 0, "initial speed (rad/s)"}, 0, 10.}}, 
    Typeset`size$$ = {500., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`l$49542$$ = 0, $CellContext`\[Theta]0$49543$$ = 
    0, $CellContext`\[Omega]0$49544$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
        Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$49542$$, 0], 
        Hold[$CellContext`\[Theta]0$$, $CellContext`\[Theta]0$49543$$, 0], 
        Hold[$CellContext`\[Omega]0$$, $CellContext`\[Omega]0$49544$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`g = 9.8; $CellContext`l$$ = 
        0.5; $CellContext`omega = ($CellContext`g/$CellContext`l$$)^
         Rational[1, 2]; 
       Module[{$CellContext`result$ = 
          NDSolve[{
            Derivative[
              2][$CellContext`\[Theta]][$CellContext`t] == \
(-($CellContext`g/$CellContext`l$$)) Sin[
                $CellContext`\[Theta][$CellContext`t]], $CellContext`\[Theta][
              0] == $CellContext`\[Theta]0$$, 
             Derivative[1][$CellContext`\[Theta]][
              
              0] == $CellContext`\[Omega]0$$}, $CellContext`\[Theta], \
{$CellContext`t, 0, 20}]}, 
         Plot[{(180/Pi) $CellContext`\[Theta]0$$ 
           Cos[$CellContext`omega $CellContext`t], 
           
           ReplaceAll[(180/
             Pi) $CellContext`\[Theta][$CellContext`t], \
$CellContext`result$]}, {$CellContext`t, 0, 20}, 
          PlotStyle -> {{Blue}, {Dashed, Red}}, PlotRange -> All, 
          AxesLabel -> {"t (s)", "\[Theta] (rad)"}, 
          PlotRange -> {{0, 20}, {-20, 20}}, ImageSize -> {500, 300}]]), 
      "Specifications" :> {{{$CellContext`l$$, 0.5, "length (m)"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]0$$, Rational[1, 9] Pi, 
          "initial angle (rad)"}, 0.1, Rational[1, 2] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`\[Omega]0$$, 0, "initial speed (rad/s)"}, 
         0, 10., Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{545., {221., 226.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.577503168951933*^9, 3.5775031800122957`*^9}, 
   3.5775496308879547`*^9, {3.577549817433275*^9, 3.577549831097909*^9}, 
   3.577549914925475*^9, {3.57754995775905*^9, 3.577549989572948*^9}, 
   3.577550763233276*^9, 3.577550806163776*^9, {3.57772420905021*^9, 
   3.5777242347737007`*^9}, 3.577724998006909*^9, 3.5777258390646133`*^9, 
   3.577725923897479*^9, 3.577726544699458*^9, 3.578104642453433*^9, 
   3.578186958448443*^9, 3.578452338947315*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsfun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(5\\\\ \[Pi]\\)\\/18\\)\[NoBreak] cannot \
be used as a function. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsfun\\\", ButtonNote -> \
\\\"NDSolve::dsfun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452339667406*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.57845233970706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.0004085714285714286`]\\)\\) \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \\(\\(Sin[\\(\\(\\(\\(\\(5\\\\ \
\[Pi]\\)\\/18\\)\\)[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\(5\\\\ \[Pi]\\)\\/18\\)\\)[0]\\)\\) \[Equal] \[Pi]\\/9\\)\
\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] 0\\)\\)}\
\\)\\), \\(5\\\\ \[Pi]\\)\\/18, \\(\\({0.0004085714285714286`, 0, \
20}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452339709358*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452339747987*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0 \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784523397504673`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452339791947*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452339793742*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0.` \
\[Equal] \\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784523398424053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578452339844326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"th", " ", "=", " ", 
     RowBox[{"50", "*", 
      RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ode2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "g"}], " ", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
           RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"-", "g"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
             RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
         ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"30", "*", 
        RowBox[{"Cos", "[", " ", 
         RowBox[{"50", "*", 
          RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
       RowBox[{"30", "*", 
        RowBox[{"Sin", "[", " ", 
         RowBox[{"50", "*", 
          RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}]}]}], "}"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.5777243506779327`*^9, 3.577724458602668*^9}, {
  3.5777246729662323`*^9, 3.577724679204132*^9}, {3.577724747629594*^9, 
  3.577724879782782*^9}, {3.577725138399036*^9, 3.577725138607109*^9}, {
  3.5777255370868397`*^9, 3.577725613386491*^9}, {3.577725727924614*^9, 
  3.5777257571377153`*^9}, {3.577725830025578*^9, 3.577725830125251*^9}, {
  3.577725888638583*^9, 3.577725904037612*^9}, {3.5777261091929617`*^9, 
  3.577726111113961*^9}, {3.577726354125143*^9, 3.5777265145597353`*^9}, {
  3.577726596054017*^9, 3.57772662823532*^9}, {3.577726664452621*^9, 
  3.577726694173053*^9}, {3.577726760550819*^9, 3.577726790977997*^9}, {
  3.5777268213662233`*^9, 3.577726827175106*^9}, {3.578104580925213*^9, 
  3.5781046330211563`*^9}, {3.578186976517642*^9, 3.578186984986505*^9}, {
  3.5781870448666477`*^9, 3.578187049436584*^9}, {3.578188382374547*^9, 
  3.5781883913480597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "0.0009800000000000002`"}], " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "9.8`"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["x", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], 
        "10000"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"30", " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "9"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{"30", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "9"], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.577724998051735*^9, 3.577725139249823*^9, 3.577725839114599*^9, {
   3.577725906187989*^9, 3.577725923940208*^9}, 3.5777264811911163`*^9, {
   3.577726518164747*^9, 3.5777265448028383`*^9}, 3.577726598419862*^9, 
   3.577726695715515*^9, {3.577726761081028*^9, 3.5777267919428473`*^9}, 
   3.5777268276209307`*^9, 3.5781046426656427`*^9, {3.578186958563683*^9, 
   3.57818698703222*^9}, 3.5781870500867567`*^9, 3.578188394097509*^9, 
   3.578452339203734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"ode2", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577725173954216*^9, 3.577725176561594*^9}, {
  3.5777254828605433`*^9, 3.577725486647872*^9}, {3.577725762121498*^9, 
  3.577725832435422*^9}, {3.578105031100801*^9, 3.5781050328325253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.578187052895413*^9, 3.5781883975158863`*^9, 
  3.578452339257826*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.5781869897859907`*^9, 3.5781884088092422`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.578104673192794*^9, 3.578104717369006*^9}, {
  3.5781048176831408`*^9, 3.57810482345791*^9}, {3.5781050967721567`*^9, 
  3.578105097057529*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 100}, {0, 60}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.578104690002221*^9, 3.578104720261043*^9}, 
   3.5781048246555643`*^9, {3.5781050980393257`*^9, 3.578105105440606*^9}, 
   3.578186958749011*^9, {3.578187019780964*^9, 3.5781870242309837`*^9}, 
   3.578187055126066*^9, 3.578188412428493*^9, 3.578452339341131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.8"}], " ", 
  RowBox[{"(*", 
   RowBox[{"m", "/", 
    RowBox[{"s", "^", "2"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", " ", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vt", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"50", " ", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ode2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "g"}], " ", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
          RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], ",", 
     
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"-", "g"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
            RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
            
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
      RowBox[{"30", "*", 
       RowBox[{"Cos", "[", " ", 
        RowBox[{"50", "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
      RowBox[{"30", "*", 
       RowBox[{"Sin", "[", " ", 
        RowBox[{"50", "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"ode2", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", " ", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}], ",", " ", 
          RowBox[{"v", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "t"}], ",", 
          RowBox[{"z", "+", 
           RowBox[{"v", "  ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "t"}], "-", 
           RowBox[{"4.9", 
            RowBox[{"t", "^", "2"}]}]}]}], "}"}], "/.", "\[IndentingNewLine]", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "''"}], "[", "t", "]"}], "==", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "g"}], " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], "/", " ", 
                 RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], 
               "]"}]}]}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "''"}], "[", "t", "]"}], "==", 
             RowBox[{
              RowBox[{"-", "g"}], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
                   RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], 
                  "]"}]}]}], ")"}]}]}], ",", " ", 
            RowBox[{
             RowBox[{"x", "[", "0", "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{"y", "[", "0", "]"}], "\[Equal]", "z"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "0", "]"}], "==", " ", 
             RowBox[{"v", "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
             RowBox[{"v", "*", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "50"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<range (m)\>\"", ",", "\"\<height (m)\>\""}], "}"}]}], 
      ",", 
      RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tf", ",", "0.01", ",", "\"\<time(s)\>\""}], "}"}], ",", 
      "0.01", ",", "10", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "10", ",", "\"\<Initial Velocity(m/s)\>\""}], "}"}], 
      ",", "0.01", ",", "100", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", "9.8", ",", "\"\<Gravity(m/s^s\>\""}], "}"}], ",", 
      " ", "0.01", ",", 
      RowBox[{"4", "*", "9.8"}], ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vt", ",", " ", "60", ",", " ", "\"\<Terminal Velocity(m/s)\>\""}], 
       "}"}], ",", " ", "1.0", ",", " ", "200", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", "2", ",", " ", "\"\<Starting Height(m)\>\""}], "}"}],
       ",", " ", "0.0", ",", " ", "5", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"50", " ", 
         RowBox[{"Pi", "/", "180"}]}], ",", "\"\<\[Theta](rad/s)\>\""}], 
       "}"}], ",", "0.01", ",", "\[Pi]", " ", ",", " ", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.578184156406591*^9, 3.578184224055585*^9}, {
   3.578184287215828*^9, 3.5781842948776827`*^9}, {3.578184354841113*^9, 
   3.578184445467906*^9}, {3.5781844778029823`*^9, 3.578184481075251*^9}, {
   3.5781845142653627`*^9, 3.578184547614915*^9}, {3.578184588534512*^9, 
   3.578184595076885*^9}, {3.5781852493170137`*^9, 3.57818527697174*^9}, {
   3.578185734636157*^9, 3.5781857356695843`*^9}, {3.578185771222012*^9, 
   3.5781859058072433`*^9}, {3.57818678089318*^9, 3.578186848047814*^9}, {
   3.578186924012068*^9, 3.5781869427107563`*^9}, {3.578187143803726*^9, 
   3.5781871643528976`*^9}, {3.578187217990333*^9, 3.578187220890078*^9}, {
   3.578187383017981*^9, 3.578187384057561*^9}, {3.5781874871439543`*^9, 
   3.578187489141717*^9}, {3.578187526940955*^9, 3.578187547768173*^9}, {
   3.578187594356103*^9, 3.5781876769954967`*^9}, 3.578187787158864*^9, {
   3.5781878269452553`*^9, 3.5781878619933853`*^9}, {3.578188430048862*^9, 
   3.57818846546131*^9}, {3.578188532226305*^9, 3.5781885411228857`*^9}, {
   3.5781891609090033`*^9, 3.578189327503124*^9}, {3.578189454805068*^9, 
   3.5781895107943*^9}, {3.578189585200382*^9, 3.578189687908691*^9}, {
   3.5784513826009274`*^9, 3.578451455399419*^9}, 3.578451499916864*^9, {
   3.578451546191435*^9, 3.578451666252617*^9}, {3.578451754877111*^9, 
   3.578451773830155*^9}, {3.578451819120233*^9, 3.578451841879018*^9}, {
   3.578451873150729*^9, 3.578451923816533*^9}, {3.5784521871688747`*^9, 
   3.578452187958579*^9}, {3.5784522615463047`*^9, 3.57845228940709*^9}, {
   3.578452397918949*^9, 3.578452409919465*^9}, {3.578452561841749*^9, 
   3.578452595418466*^9}, {3.5784526469981833`*^9, 3.5784526645225563`*^9}, {
   3.5784527285434103`*^9, 3.57845279643151*^9}, {3.5784531563864193`*^9, 
   3.5784531600983543`*^9}, {3.5784533063265133`*^9, 3.578453311532105*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`g$$ = 9.8, $CellContext`tf$$ = 
    10., $CellContext`v$$ = 46.00000000000001, $CellContext`vt$$ = 
    60, $CellContext`z$$ = 2, $CellContext`\[Theta]$$ = 1.29, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tf$$], 0.01, "time(s)"}, 0.01, 10}, {{
       Hold[$CellContext`v$$], 10, "Initial Velocity(m/s)"}, 0.01, 100}, {{
       Hold[$CellContext`g$$], 9.8, "Gravity(m/s^s"}, 0.01, 39.2}, {{
       Hold[$CellContext`vt$$], 60, "Terminal Velocity(m/s)"}, 1., 200}, {{
       Hold[$CellContext`z$$], 2, "Starting Height(m)"}, 0., 5}, {{
       Hold[$CellContext`\[Theta]$$], Rational[5, 18] Pi, "\[Theta](rad/s)"}, 
      0.01, Pi}}, Typeset`size$$ = {1000., {289., 294.}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`tf$82648$$ = 0, $CellContext`v$82649$$ = 
    0, $CellContext`g$82650$$ = 0, $CellContext`vt$82651$$ = 
    0, $CellContext`z$82652$$ = 0, $CellContext`\[Theta]$82653$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`g$$ = 9.8, $CellContext`tf$$ = 
        0.01, $CellContext`v$$ = 10, $CellContext`vt$$ = 60, $CellContext`z$$ = 
        2, $CellContext`\[Theta]$$ = Rational[5, 18] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tf$$, $CellContext`tf$82648$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$82649$$, 0], 
        Hold[$CellContext`g$$, $CellContext`g$82650$$, 0], 
        Hold[$CellContext`vt$$, $CellContext`vt$82651$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$82652$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$82653$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        Evaluate[
         ReplaceAll[{
           $CellContext`x[$CellContext`t], 
           $CellContext`y[$CellContext`t], $CellContext`v$$ 
           Cos[$CellContext`\[Theta]$$] $CellContext`t, $CellContext`z$$ + \
$CellContext`v$$ Sin[$CellContext`\[Theta]$$] $CellContext`t - 
           4.9 $CellContext`t^2}, 
          
          NDSolve[{
           Derivative[
             2][$CellContext`x][$CellContext`t] == ((-$CellContext`g$$) (
               Derivative[
                1][$CellContext`x][$CellContext`t]/$CellContext`vt$$^2)) 
             Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
               Derivative[1][$CellContext`y][$CellContext`t]^2], 
            Derivative[
             2][$CellContext`y][$CellContext`t] == (-$CellContext`g$$) (
              1 + (Derivative[
                 1][$CellContext`y][$CellContext`t]/$CellContext`vt$$^2) 
               Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
                 Derivative[
                   1][$CellContext`y][$CellContext`t]^2]), $CellContext`x[0] == 
            0, $CellContext`y[0] == $CellContext`z$$, 
            Derivative[1][$CellContext`x][0] == $CellContext`v$$ 
             Cos[$CellContext`\[Theta]$$], 
            Derivative[1][$CellContext`y][0] == $CellContext`v$$ 
             Sin[$CellContext`\[Theta]$$]}, {$CellContext`x, $CellContext`y}, \
{$CellContext`t, 0, 200}]]], {$CellContext`t, 0, $CellContext`tf$$}, 
        PlotRange -> {{0, 100}, {-10, 50}}, 
        AxesLabel -> {"range (m)", "height (m)"}, ImageSize -> 1000], 
      "Specifications" :> {{{$CellContext`tf$$, 0.01, "time(s)"}, 0.01, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`v$$, 10, "Initial Velocity(m/s)"}, 0.01, 
         100, Appearance -> 
         "Labeled"}, {{$CellContext`g$$, 9.8, "Gravity(m/s^s"}, 0.01, 39.2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`vt$$, 60, "Terminal Velocity(m/s)"}, 1., 
         200, Appearance -> 
         "Labeled"}, {{$CellContext`z$$, 2, "Starting Height(m)"}, 0., 5, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]$$, Rational[5, 18] Pi, 
          "\[Theta](rad/s)"}, 0.01, Pi, Appearance -> "Labeled"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {403., 408.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.578453313040526*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`g$$ = 9.8, $CellContext`tf$$ = 
    4.91, $CellContext`v$$ = 34, $CellContext`vt$$ = 44, $CellContext`z$$ = 
    0, $CellContext`\[Theta]$$ = Rational[5, 18] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tf$$], 0.01, "time(s)"}, 0.01, 10}, {{
       Hold[$CellContext`v$$], 10, "Initial Velocity(m/s)"}, 0.01, 100}, {{
       Hold[$CellContext`g$$], 9.8, "Gravity(m/s^s"}, 0.01, 39.2}, {{
       Hold[$CellContext`vt$$], 44, "Terminal Velocity(m/s)"}, 1., 200}, {{
       Hold[$CellContext`z$$], 0, "Starting Height(m)"}, 0., 5}, {{
       Hold[$CellContext`\[Theta]$$], Rational[5, 18] Pi, "\[Theta](rad/s)"}, 
      0.01, Pi}}, Typeset`size$$ = {1000., {289., 294.}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`tf$76658$$ = 0, $CellContext`v$76659$$ = 
    0, $CellContext`g$76660$$ = 0, $CellContext`vt$76661$$ = 
    0, $CellContext`z$76662$$ = 0, $CellContext`\[Theta]$76663$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`g$$ = 9.8, $CellContext`tf$$ = 
        0.01, $CellContext`v$$ = 10, $CellContext`vt$$ = 44, $CellContext`z$$ = 
        0, $CellContext`\[Theta]$$ = Rational[5, 18] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tf$$, $CellContext`tf$76658$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$76659$$, 0], 
        Hold[$CellContext`g$$, $CellContext`g$76660$$, 0], 
        Hold[$CellContext`vt$$, $CellContext`vt$76661$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$76662$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$76663$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        Evaluate[
         ReplaceAll[{
           $CellContext`x[$CellContext`t], 
           $CellContext`y[$CellContext`t], $CellContext`v$$ 
           Cos[$CellContext`\[Theta]$$] $CellContext`t, $CellContext`z$$ + \
$CellContext`v$$ Sin[$CellContext`\[Theta]$$] $CellContext`t - 
           4.9 $CellContext`t^2}, 
          
          NDSolve[{
           Derivative[
             2][$CellContext`x][$CellContext`t] == ((-$CellContext`g$$) (
               Derivative[
                1][$CellContext`x][$CellContext`t]/$CellContext`vt$$^2)) 
             Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
               Derivative[1][$CellContext`y][$CellContext`t]^2], 
            Derivative[
             2][$CellContext`y][$CellContext`t] == (-$CellContext`g$$) (
              1 + (Derivative[
                 1][$CellContext`y][$CellContext`t]/$CellContext`vt$$^2) 
               Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
                 Derivative[
                   1][$CellContext`y][$CellContext`t]^2]), $CellContext`x[0] == 
            0, $CellContext`y[0] == $CellContext`z$$, 
            Derivative[1][$CellContext`x][0] == $CellContext`v$$ 
             Cos[$CellContext`\[Theta]$$], 
            Derivative[1][$CellContext`y][0] == $CellContext`v$$ 
             Sin[$CellContext`\[Theta]$$]}, {$CellContext`x, $CellContext`y}, \
{$CellContext`t, 0, 200}]]], {$CellContext`t, 0, $CellContext`tf$$}, 
        PlotRange -> {{0, 100}, {-10, 50}}, 
        AxesLabel -> {"range (m)", "height (m)"}, ImageSize -> 1000], 
      "Specifications" :> {{{$CellContext`tf$$, 0.01, "time(s)"}, 0.01, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`v$$, 10, "Initial Velocity(m/s)"}, 0.01, 
         100, Appearance -> 
         "Labeled"}, {{$CellContext`g$$, 9.8, "Gravity(m/s^s"}, 0.01, 39.2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`vt$$, 44, "Terminal Velocity(m/s)"}, 1., 
         200, Appearance -> 
         "Labeled"}, {{$CellContext`z$$, 0, "Starting Height(m)"}, 0., 5, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]$$, Rational[5, 18] Pi, 
          "\[Theta](rad/s)"}, 0.01, Pi, Appearance -> "Labeled"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {418., 423.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{3.578453181341548*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`g$$ = 9.8, $CellContext`tf$$ = 
    4.91, $CellContext`v$$ = 34, $CellContext`vt$$ = 44, $CellContext`z$$ = 
    0, $CellContext`\[Theta]$$ = 0.6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tf$$], 4.91, "time(s)"}, 0.01, 10}, {{
       Hold[$CellContext`v$$], 34, "Initial Velocity(m/s)"}, 0.01, 100}, {{
       Hold[$CellContext`g$$], 9.8, "Gravity(m/s^s"}, 0.01, 39.2}, {{
       Hold[$CellContext`vt$$], 44, "Terminal Velocity(m/s)"}, 1., 200}, {{
       Hold[$CellContext`z$$], 0, "Starting Height(m)"}, 0., 5}, {{
       Hold[$CellContext`\[Theta]$$], Rational[5, 18] Pi, "\[Theta](rad/s)"}, 
      0.01, Pi}}, Typeset`size$$ = {1000., {289., 294.}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`tf$80609$$ = 0, $CellContext`v$80610$$ = 
    0, $CellContext`g$80611$$ = 0, $CellContext`vt$80612$$ = 
    0, $CellContext`z$80613$$ = 0, $CellContext`\[Theta]$80614$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`g$$ = 9.8, $CellContext`tf$$ = 
        4.91, $CellContext`v$$ = 34, $CellContext`vt$$ = 44, $CellContext`z$$ = 
        0, $CellContext`\[Theta]$$ = Rational[5, 18] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tf$$, $CellContext`tf$80609$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$80610$$, 0], 
        Hold[$CellContext`g$$, $CellContext`g$80611$$, 0], 
        Hold[$CellContext`vt$$, $CellContext`vt$80612$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$80613$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$80614$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        Evaluate[
         ReplaceAll[{
           $CellContext`x[$CellContext`t], 
           $CellContext`y[$CellContext`t], $CellContext`v$$ 
           Cos[$CellContext`\[Theta]$$] $CellContext`t, $CellContext`z$$ + \
$CellContext`v$$ Sin[$CellContext`\[Theta]$$] $CellContext`t - 
           4.9 $CellContext`t^2}, 
          
          NDSolve[{
           Derivative[
             2][$CellContext`x][$CellContext`t] == ((-$CellContext`g$$) (
               Derivative[
                1][$CellContext`x][$CellContext`t]/$CellContext`vt$$^2)) 
             Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
               Derivative[1][$CellContext`y][$CellContext`t]^2], 
            Derivative[
             2][$CellContext`y][$CellContext`t] == (-$CellContext`g$$) (
              1 + (Derivative[
                 1][$CellContext`y][$CellContext`t]/$CellContext`vt$$^2) 
               Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
                 Derivative[
                   1][$CellContext`y][$CellContext`t]^2]), $CellContext`x[0] == 
            0, $CellContext`y[0] == $CellContext`z$$, 
            Derivative[1][$CellContext`x][0] == $CellContext`v$$ 
             Cos[$CellContext`\[Theta]$$], 
            Derivative[1][$CellContext`y][0] == $CellContext`v$$ 
             Sin[$CellContext`\[Theta]$$]}, {$CellContext`x, $CellContext`y}, \
{$CellContext`t, 0, 200}]]], {$CellContext`t, 0, $CellContext`tf$$}, 
        PlotRange -> {{0, 100}, {-10, 50}}, 
        AxesLabel -> {"range (m)", "height (m)"}, ImageSize -> 1000], 
      "Specifications" :> {{{$CellContext`tf$$, 4.91, "time(s)"}, 0.01, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`v$$, 34, "Initial Velocity(m/s)"}, 0.01, 
         100, Appearance -> 
         "Labeled"}, {{$CellContext`g$$, 9.8, "Gravity(m/s^s"}, 0.01, 39.2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`vt$$, 44, "Terminal Velocity(m/s)"}, 1., 
         200, Appearance -> 
         "Labeled"}, {{$CellContext`z$$, 0, "Starting Height(m)"}, 0., 5, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]$$, Rational[5, 18] Pi, 
          "\[Theta](rad/s)"}, 0.01, Pi, Appearance -> "Labeled"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {417., 422.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{3.578453214830089*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"{", 
    RowBox[{"BaseBall", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "=", 
        RowBox[{"5", 
         RowBox[{"\[Pi]", "/", "18"}]}]}], ",", 
       RowBox[{"Vinit", "=", "34"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"GolfBall", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "=", "0.6"}], ",", 
       RowBox[{"Vinit", "=", "34"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"HumanCannonball", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "=", "1.29"}], ",", 
       RowBox[{"Vinit", "=", "46"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5784530179527693`*^9, 3.578453054911784*^9}, {
  3.5784530854135303`*^9, 3.578453145169718*^9}, {3.578453249372898*^9, 
  3.578453292288612*^9}, {3.5784533932054367`*^9, 3.578453421430077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"expr", ",", "expr"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"expr", ",", "expr"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"expr", ",", "expr"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"expr", ",", "expr"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5784534140209513`*^9, 3.578453421895616*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Sorry", ",", " ", 
   RowBox[{
    RowBox[{
    "I", " ", "left", " ", "for", " ", "home", " ", "Friday", " ", 
     "afternoon", " ", "and", " ", "spent", " ", "Thursday", " ", "studying", 
     " ", "for", " ", "a", " ", "Linear", " ", 
     RowBox[{"Midterm", ".", " ", "I"}], " ", "ended", " ", "up", " ", 
     "getting", " ", "home", " ", "at", " ", "11"}], ":", 
    RowBox[{"10", "pm"}]}], ",", " ", 
   RowBox[{"and", " ", "did", " ", "not", " ", "have", " ", "enough", " ", 
    RowBox[{"time", ".", " ", 
     RowBox[{"It", "'"}]}], "s", " ", "on", " ", "me"}], ",", " ", 
   RowBox[{
   "but", " ", "I", " ", "just", " ", "wanted", " ", "to", " ", "let", " ", 
    "you", " ", "know", " ", "if", " ", "you", " ", "read", " ", 
    RowBox[{"this", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.578453483302144*^9, 3.578453546178309*^9}}]
},
WindowSize->{1680, 1006},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 2556, 65, 165, "Input"],
Cell[3138, 89, 468, 10, 40, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3643, 104, 1272, 29, 57, "Input"],
Cell[4918, 135, 466, 10, 24, "Message"],
Cell[5387, 147, 1186, 20, 41, "Message"],
Cell[6576, 169, 466, 10, 24, "Message"],
Cell[7045, 181, 864, 16, 24, "Message"],
Cell[7912, 199, 466, 10, 24, "Message"],
Cell[8381, 211, 531, 11, 24, "Message"],
Cell[8915, 224, 866, 16, 24, "Message"],
Cell[9784, 242, 533, 11, 24, "Message"]
}, Open  ]],
Cell[10332, 256, 1142, 25, 46, "Input"],
Cell[CellGroupData[{
Cell[11499, 285, 364, 7, 46, "Input"],
Cell[11866, 294, 40070, 663, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51973, 962, 4370, 110, 181, "Input"],
Cell[56346, 1074, 3897, 75, 464, "Output"],
Cell[60246, 1151, 466, 10, 40, "Message"],
Cell[60715, 1163, 465, 10, 24, "Message"],
Cell[61183, 1175, 1186, 20, 41, "Message"],
Cell[62372, 1197, 466, 10, 24, "Message"],
Cell[62841, 1209, 866, 16, 24, "Message"],
Cell[63710, 1227, 466, 10, 24, "Message"],
Cell[64179, 1239, 531, 11, 24, "Message"],
Cell[64713, 1252, 868, 16, 24, "Message"],
Cell[65584, 1270, 533, 11, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66154, 1286, 3287, 84, 80, "Input"],
Cell[69444, 1372, 2594, 73, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72075, 1450, 460, 10, 28, "Input"],
Cell[72538, 1462, 736, 25, 28, "Output"]
}, Open  ]],
Cell[73289, 1490, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[73408, 1495, 713, 20, 28, "Input"],
Cell[74124, 1517, 9878, 166, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84039, 1688, 10223, 259, 335, "Input"],
Cell[94265, 1949, 4848, 90, 828, "Output"]
}, Open  ]],
Cell[99128, 2042, 4847, 90, 858, InheritFromParent],
Cell[103978, 2134, 4832, 90, 856, InheritFromParent],
Cell[CellGroupData[{
Cell[108835, 2228, 922, 25, 28, "Input"],
Cell[109760, 2255, 475, 15, 28, "Output"]
}, Open  ]],
Cell[110250, 2273, 904, 18, 46, "Input"]
}
]
*)

(* End of internal cache information *)
